{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.28.1.47646",
      "templateHash": "9334018118814832817"
    }
  },
  "parameters": {
    "solutionPrefix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 6,
      "metadata": {
        "description": "Prefix Name"
      }
    },
    "otherLocation": {
      "type": "string",
      "metadata": {
        "description": "other Location"
      }
    }
  },
  "variables": {
    "resourceGroupLocation": "[resourceGroup().location]",
    "resourceGroupName": "[resourceGroup().name]",
    "solutionLocation": "[variables('resourceGroupLocation')]",
    "baseUrl": "https://raw.githubusercontent.com/nchandhi/nckmdeployment/main/"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_managed_identity",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "solutionName": {
            "value": "[parameters('solutionPrefix')]"
          },
          "solutionLocation": {
            "value": "[variables('solutionLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "14133192615685065374"
            }
          },
          "parameters": {
            "solutionName": {
              "type": "string",
              "minLength": 3,
              "maxLength": 15,
              "metadata": {
                "description": "Solution Name"
              }
            },
            "solutionLocation": {
              "type": "string",
              "metadata": {
                "description": "Solution Location"
              }
            },
            "miName": {
              "type": "string",
              "defaultValue": "[format('{0}-managed-identity', parameters('solutionName'))]",
              "metadata": {
                "description": "Name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[parameters('miName')]",
              "location": "[parameters('solutionLocation')]",
              "tags": {
                "app": "[parameters('solutionName')]",
                "location": "[parameters('solutionLocation')]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('miName')), resourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635'))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('miName')), '2023-01-31').principalId]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('miName'))]"
              ]
            }
          ],
          "outputs": {
            "managedIdentityOutput": {
              "type": "object",
              "value": {
                "id": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('miName'))]",
                "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('miName')), '2023-01-31').principalId]",
                "name": "[parameters('miName')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_ai_foundry",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "solutionName": {
            "value": "[parameters('solutionPrefix')]"
          },
          "solutionLocation": {
            "value": "[parameters('otherLocation')]"
          },
          "managedIdentityObjectId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_managed_identity'), '2022-09-01').outputs.managedIdentityOutput.value.objectId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "3249608652493221540"
            }
          },
          "parameters": {
            "solutionName": {
              "type": "string"
            },
            "solutionLocation": {
              "type": "string"
            },
            "managedIdentityObjectId": {
              "type": "string"
            }
          },
          "variables": {
            "storageName": "[format('{0}storage', parameters('solutionName'))]",
            "storageSkuName": "Standard_LRS",
            "aiServicesName": "[format('{0}-aiservices', parameters('solutionName'))]",
            "applicationInsightsName": "[format('{0}-appinsights', parameters('solutionName'))]",
            "containerRegistryName": "[format('{0}acr', parameters('solutionName'))]",
            "keyvaultName": "[format('{0}-kv', parameters('solutionName'))]",
            "location": "[parameters('solutionLocation')]",
            "aiHubName": "[format('{0}-aihub', parameters('solutionName'))]",
            "aiHubFriendlyName": "[variables('aiHubName')]",
            "aiHubDescription": "Test",
            "aiProjectName": "[format('{0}-aiproject', parameters('solutionName'))]",
            "aiProjectFriendlyName": "[variables('aiProjectName')]",
            "aiSearchName": "[format('{0}-search', parameters('solutionName'))]",
            "aiModelDeployments": [
              {
                "name": "gpt-4o-mini",
                "model": "gpt-4o-mini",
                "sku": {
                  "name": "Standard",
                  "capacity": 20
                },
                "raiPolicyName": "Microsoft.Default"
              },
              {
                "name": "gpt-4o",
                "model": "gpt-4o",
                "sku": {
                  "name": "Standard",
                  "capacity": 20
                },
                "raiPolicyName": "Microsoft.Default"
              },
              {
                "name": "text-embedding-ada-002",
                "model": "text-embedding-ada-002",
                "sku": {
                  "name": "Standard",
                  "capacity": 20
                },
                "raiPolicyName": "Microsoft.Default"
              }
            ],
            "containerRegistryNameCleaned": "[replace(variables('containerRegistryName'), '-', '')]",
            "storageNameCleaned": "[replace(variables('storageName'), '-', '')]"
          },
          "resources": [
            {
              "type": "Microsoft.MachineLearningServices/workspaces/connections",
              "apiVersion": "2024-07-01-preview",
              "name": "[format('{0}/{1}', variables('aiHubName'), format('{0}-connection-AzureOpenAI', variables('aiHubName')))]",
              "properties": {
                "category": "AzureOpenAI",
                "target": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName')), '2021-10-01').endpoint]",
                "authType": "ApiKey",
                "isSharedToAll": true,
                "credentials": {
                  "key": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName')), '2021-10-01').key1]"
                },
                "metadata": {
                  "ApiType": "Azure",
                  "ResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]"
              ]
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces/connections",
              "apiVersion": "2024-07-01-preview",
              "name": "[format('{0}/{1}', variables('aiHubName'), format('{0}-connection-AzureAISearch', variables('aiHubName')))]",
              "properties": {
                "category": "CognitiveSearch",
                "target": "[format('https://{0}.search.windows.net', variables('aiSearchName'))]",
                "authType": "ApiKey",
                "isSharedToAll": true,
                "credentials": {
                  "key": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('aiSearchName')), '2023-11-01').primaryKey]"
                },
                "metadata": {
                  "type": "azure_ai_search",
                  "ApiType": "Azure",
                  "ResourceId": "[resourceId('Microsoft.Search/searchServices', variables('aiSearchName'))]",
                  "ApiVersion": "2024-05-01-preview",
                  "DeploymentApiVersion": "2023-11-01"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]",
                "[resourceId('Microsoft.Search/searchServices', variables('aiSearchName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[variables('applicationInsightsName')]",
              "location": "[variables('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "DisableIpMasking": false,
                "DisableLocalAuth": false,
                "Flow_Type": "Bluefield",
                "ForceCustomerStorageForProfiler": false,
                "ImmediatePurgeDataOn30Days": true,
                "IngestionMode": "ApplicationInsights",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Disabled",
                "Request_Source": "rest"
              }
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2021-09-01",
              "name": "[variables('containerRegistryNameCleaned')]",
              "location": "[variables('location')]",
              "sku": {
                "name": "Premium"
              },
              "properties": {
                "adminUserEnabled": true,
                "dataEndpointEnabled": false,
                "networkRuleBypassOptions": "AzureServices",
                "networkRuleSet": {
                  "defaultAction": "Deny"
                },
                "policies": {
                  "quarantinePolicy": {
                    "status": "enabled"
                  },
                  "retentionPolicy": {
                    "status": "enabled",
                    "days": 7
                  },
                  "trustPolicy": {
                    "status": "disabled",
                    "type": "Notary"
                  }
                },
                "publicNetworkAccess": "Disabled",
                "zoneRedundancy": "Disabled"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[variables('keyvaultName')]",
              "location": "[variables('location')]",
              "properties": {
                "createMode": "default",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "enableRbacAuthorization": true,
                "enablePurgeProtection": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "softDeleteRetentionInDays": 7,
                "tenantId": "[subscription().tenantId]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceGroup().id, parameters('managedIdentityObjectId'), resourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483'))]",
              "properties": {
                "principalId": "[parameters('managedIdentityObjectId')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2021-10-01",
              "name": "[variables('aiServicesName')]",
              "location": "[variables('location')]",
              "sku": {
                "name": "S0"
              },
              "kind": "AIServices",
              "properties": {
                "apiProperties": {
                  "statisticsEnabled": false
                }
              }
            },
            {
              "copy": {
                "name": "aiServicesDeployments",
                "count": "[length(variables('aiModelDeployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', variables('aiServicesName'), variables('aiModelDeployments')[copyIndex()].name)]",
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[variables('aiModelDeployments')[copyIndex()].model]"
                },
                "raiPolicyName": "[variables('aiModelDeployments')[copyIndex()].raiPolicyName]"
              },
              "sku": {
                "name": "[variables('aiModelDeployments')[copyIndex()].sku.name]",
                "capacity": "[variables('aiModelDeployments')[copyIndex()].sku.capacity]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]"
              ]
            },
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2023-11-01",
              "name": "[variables('aiSearchName')]",
              "location": "[parameters('solutionLocation')]",
              "sku": {
                "name": "basic"
              },
              "properties": {
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "default",
                "publicNetworkAccess": "enabled",
                "networkRuleSet": {
                  "ipRules": []
                },
                "encryptionWithCmk": {
                  "enforcement": "Unspecified"
                },
                "disableLocalAuth": false,
                "authOptions": {
                  "apiKeyOnly": {}
                },
                "semanticSearch": "free"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[variables('storageNameCleaned')]",
              "location": "[variables('location')]",
              "sku": {
                "name": "[variables('storageSkuName')]"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowCrossTenantReplication": false,
                "allowSharedKeyAccess": true,
                "encryption": {
                  "keySource": "Microsoft.Storage",
                  "requireInfrastructureEncryption": false,
                  "services": {
                    "blob": {
                      "enabled": true,
                      "keyType": "Account"
                    },
                    "file": {
                      "enabled": true,
                      "keyType": "Account"
                    },
                    "queue": {
                      "enabled": true,
                      "keyType": "Service"
                    },
                    "table": {
                      "enabled": true,
                      "keyType": "Service"
                    }
                  }
                },
                "isHnsEnabled": false,
                "isNfsV3Enabled": false,
                "keyPolicy": {
                  "keyExpirationPeriodInDays": 7
                },
                "largeFileSharesState": "Disabled",
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', variables('storageNameCleaned'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "allowPermanentDelete": false,
                  "enabled": false
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}/{2}', variables('storageNameCleaned'), 'default', 'data')]",
              "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageNameCleaned'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceGroup().id, parameters('managedIdentityObjectId'), resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe'))]",
              "properties": {
                "principalId": "[parameters('managedIdentityObjectId')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2023-08-01-preview",
              "name": "[variables('aiHubName')]",
              "location": "[variables('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "friendlyName": "[variables('aiHubFriendlyName')]",
                "description": "[variables('aiHubDescription')]",
                "keyVault": "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]",
                "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                "applicationInsights": "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
                "containerRegistry": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
              },
              "kind": "hub",
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', variables('aiSearchName'))]",
                "aiServicesDeployments",
                "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
              ]
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2024-01-01-preview",
              "name": "[variables('aiProjectName')]",
              "location": "[variables('location')]",
              "kind": "Project",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "friendlyName": "[variables('aiProjectFriendlyName')]",
                "hubResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'TENANT-ID')]",
              "properties": {
                "value": "[subscription().tenantId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'ADLS-ACCOUNT-NAME')]",
              "properties": {
                "value": "[variables('storageName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'ADLS-ACCOUNT-CONTAINER')]",
              "properties": {
                "value": "data"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'ADLS-ACCOUNT-KEY')]",
              "properties": {
                "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned')), '2022-09-01').keys[0].value]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'AZURE-OPENAI-KEY')]",
              "properties": {
                "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName')), '2021-10-01').key1]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'AZURE-OPENAI-PREVIEW-API-VERSION')]",
              "properties": {
                "value": "2024-02-15-preview"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'AZURE-OPENAI-ENDPOINT')]",
              "properties": {
                "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName')), '2021-10-01').endpoint]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'AZURE-SEARCH-KEY')]",
              "properties": {
                "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('aiSearchName')), '2023-11-01').primaryKey]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', variables('aiSearchName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'AZURE-SEARCH-ENDPOINT')]",
              "properties": {
                "value": "[format('https://{0}.search.windows.net', variables('aiSearchName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', variables('aiSearchName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'AZURE-SEARCH-SERVICE')]",
              "properties": {
                "value": "[variables('aiSearchName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', variables('aiSearchName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'AZURE-SEARCH-INDEX')]",
              "properties": {
                "value": "transcripts_index"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'COG-SERVICES-ENDPOINT')]",
              "properties": {
                "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName')), '2021-10-01').endpoint]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'COG-SERVICES-KEY')]",
              "properties": {
                "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName')), '2021-10-01').key1]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'COG-SERVICES-NAME')]",
              "properties": {
                "value": "[variables('aiServicesName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'AZURE-SUBSCRIPTION-ID')]",
              "properties": {
                "value": "[subscription().subscriptionId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'AZURE-RESOURCE-GROUP')]",
              "properties": {
                "value": "[resourceGroup().name]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('keyvaultName'), 'AZURE-LOCATION')]",
              "properties": {
                "value": "[parameters('solutionLocation')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
              ]
            }
          ],
          "outputs": {
            "keyvaultName": {
              "type": "string",
              "value": "[variables('keyvaultName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_managed_identity')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_cosmos_db",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "solutionName": {
            "value": "[parameters('solutionPrefix')]"
          },
          "solutionLocation": {
            "value": "[parameters('otherLocation')]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_ai_foundry'), '2022-09-01').outputs.keyvaultName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "1791485764162182828"
            }
          },
          "parameters": {
            "solutionName": {
              "type": "string",
              "minLength": 3,
              "maxLength": 15,
              "metadata": {
                "description": "Solution Name"
              }
            },
            "solutionLocation": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "defaultValue": "GlobalDocumentDB",
              "allowedValues": [
                "GlobalDocumentDB",
                "MongoDB",
                "Parse"
              ]
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "accountName": "[format('{0}-cosmos', parameters('solutionName'))]",
            "databaseName": "db_conversation_history",
            "collectionName": "conversations",
            "containers": [
              {
                "name": "[variables('collectionName')]",
                "id": "[variables('collectionName')]",
                "partitionKey": "/userId"
              }
            ]
          },
          "resources": [
            {
              "copy": {
                "name": "list",
                "count": "[length(variables('containers'))]"
              },
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2022-05-15",
              "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', variables('accountName'), variables('databaseName')), '/')[0], split(format('{0}/{1}', variables('accountName'), variables('databaseName')), '/')[1], variables('containers')[copyIndex()].name)]",
              "properties": {
                "resource": {
                  "id": "[variables('containers')[copyIndex()].id]",
                  "partitionKey": {
                    "paths": [
                      "[variables('containers')[copyIndex()].partitionKey]"
                    ]
                  }
                },
                "options": {}
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}/{1}', variables('accountName'), variables('databaseName')), '/')[0], split(format('{0}/{1}', variables('accountName'), variables('databaseName')), '/')[1])]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2022-08-15",
              "name": "[variables('accountName')]",
              "kind": "[parameters('kind')]",
              "location": "[parameters('solutionLocation')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session"
                },
                "locations": [
                  {
                    "locationName": "[parameters('solutionLocation')]",
                    "failoverPriority": 0,
                    "isZoneRedundant": false
                  }
                ],
                "databaseAccountOfferType": "Standard",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "disableLocalAuth": true,
                "apiProperties": "[if(equals(parameters('kind'), 'MongoDB'), createObject('serverVersion', '4.0'), createObject())]",
                "capabilities": [
                  {
                    "name": "EnableServerless"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2022-05-15",
              "name": "[format('{0}/{1}', variables('accountName'), variables('databaseName'))]",
              "properties": {
                "resource": {
                  "id": "[variables('databaseName')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'AZURE_COSMOSDB_ACCOUNT')]",
              "properties": {
                "value": "[variables('accountName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'AZURE-COSMOSDB-ACCOUNT-KEY')]",
              "properties": {
                "value": "TBD"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'AZURE-COSMOSDB-DATABASE')]",
              "properties": {
                "value": "[variables('databaseName')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'AZURE-COSMOSDB-CONVERSATIONS-CONTAINER')]",
              "properties": {
                "value": "[variables('collectionName')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'AZURE-COSMOSDB-ENABLE-FEEDBACK')]",
              "properties": {
                "value": "True"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_ai_foundry')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_sql_db",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "solutionName": {
            "value": "[parameters('solutionPrefix')]"
          },
          "solutionLocation": {
            "value": "[parameters('otherLocation')]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_ai_foundry'), '2022-09-01').outputs.keyvaultName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "11473947248872889619"
            }
          },
          "parameters": {
            "solutionName": {
              "type": "string",
              "minLength": 3,
              "maxLength": 15,
              "metadata": {
                "description": "Solution Name"
              }
            },
            "solutionLocation": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            }
          },
          "variables": {
            "serverName": "[format('{0}-sql-server', parameters('solutionName'))]",
            "sqlDBName": "[format('{0}-sql-db', parameters('solutionName'))]",
            "location": "[parameters('solutionLocation')]",
            "administratorLogin": "sqladmin",
            "administratorLoginPassword": "TestPassword_1234"
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2023-08-01-preview",
              "name": "[variables('serverName')]",
              "location": "[variables('location')]",
              "kind": "v12.0",
              "properties": {
                "administratorLogin": "[variables('administratorLogin')]",
                "administratorLoginPassword": "[variables('administratorLoginPassword')]",
                "publicNetworkAccess": "Enabled",
                "version": "12.0",
                "restrictOutboundNetworkAccess": "Disabled"
              }
            },
            {
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2023-08-01-preview",
              "name": "[format('{0}/{1}', variables('serverName'), 'AllowSpecificRange')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('serverName'))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2023-08-01-preview",
              "name": "[format('{0}/{1}', variables('serverName'), 'AllowAllWindowsAzureIps')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('serverName'))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2023-08-01-preview",
              "name": "[format('{0}/{1}', variables('serverName'), variables('sqlDBName'))]",
              "location": "[variables('location')]",
              "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 2
              },
              "kind": "v12.0,user,vcore,serverless",
              "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "autoPauseDelay": 60,
                "minCapacity": 1,
                "readScale": "Disabled",
                "zoneRedundant": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('serverName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'SQLDB-SERVER')]",
              "properties": {
                "value": "[variables('serverName')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'SQLDB-DATABASE')]",
              "properties": {
                "value": "[variables('sqlDBName')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'SQLDB-USERNAME')]",
              "properties": {
                "value": "[variables('administratorLogin')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'SQLDB-PASSWORD')]",
              "properties": {
                "value": "[variables('administratorLoginPassword')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_ai_foundry')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_upload_files_script",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "solutionLocation": {
            "value": "[variables('solutionLocation')]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_ai_foundry'), '2022-09-01').outputs.keyvaultName.value]"
          },
          "baseUrl": {
            "value": "[variables('baseUrl')]"
          },
          "storageAccountName": {
            "reference": {
              "keyVault": {
                "id": "[resourceId('Microsoft.KeyVault/vaults', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_ai_foundry'), '2022-09-01').outputs.keyvaultName.value)]"
              },
              "secretName": "ADLS-ACCOUNT-NAME"
            }
          },
          "containerName": {
            "reference": {
              "keyVault": {
                "id": "[resourceId('Microsoft.KeyVault/vaults', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_ai_foundry'), '2022-09-01').outputs.keyvaultName.value)]"
              },
              "secretName": "ADLS-ACCOUNT-CONTAINER"
            }
          },
          "managedIdentityObjectId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_managed_identity'), '2022-09-01').outputs.managedIdentityOutput.value.objectId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "13089450477687505462"
            }
          },
          "parameters": {
            "solutionLocation": {
              "type": "string",
              "metadata": {
                "description": "Specifies the location for resources."
              }
            },
            "keyVaultName": {
              "type": "string"
            },
            "baseUrl": {
              "type": "string"
            },
            "managedIdentityObjectId": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "securestring"
            },
            "containerName": {
              "type": "securestring"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "copy_demo_Data",
              "kind": "AzureCLI",
              "location": "[parameters('solutionLocation')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityObjectId'))]": {}
                }
              },
              "properties": {
                "azCliVersion": "2.50.0",
                "primaryScriptUri": "[format('{0}Deployment/scripts/copy_kb_files.sh', parameters('baseUrl'))]",
                "arguments": "[format('{0} {1} {2}', parameters('storageAccountName'), parameters('containerName'), parameters('baseUrl'))]",
                "timeout": "PT1H",
                "retentionInterval": "PT1H",
                "cleanupPreference": "OnSuccess"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_ai_foundry')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_managed_identity')]"
      ]
    }
  ]
}